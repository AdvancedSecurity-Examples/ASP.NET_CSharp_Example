name: Generate SBOM

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  generate-sbom:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '6.0.x'

      - name: Extract .NET Target Framework
        id: framework
        run: |
          FRAMEWORK=$(grep -oP '(?<=<TargetFrameworkVersion>)[^<]+' WebGoat/WebGoat.NET.csproj | head -1)
          echo "version=$FRAMEWORK" >> $GITHUB_OUTPUT
          echo ".NET Target Framework: $FRAMEWORK"

      - name: Install CycloneDX
        run: dotnet tool install --global CycloneDX

      - name: Generate SBOM
        run: |
          ~/.dotnet/tools/cyclonedx WebGoat.NET.sln -o . -t json -f sbom.json || echo "CycloneDX generation attempted"

      - name: Add .NET version to SBOM
        run: |
          python3 << 'PYTHON_EOF'
          import json
          from datetime import datetime
          import os

          # Load or create SBOM
          if os.path.exists('sbom.json'):
              with open('sbom.json', 'r') as f:
                  sbom = json.load(f)
          else:
              sbom = {
                  "bomFormat": "CycloneDX",
                  "specVersion": "1.4",
                  "version": 1,
                  "metadata": {},
                  "components": []
              }

          # Add metadata with .NET version
          sbom['metadata']['timestamp'] = datetime.utcnow().isoformat() + 'Z'
          sbom['metadata']['component'] = {
              "type": "application",
              "name": "WebGoat.NET",
              "properties": [
                  {
                      "name": "dotnet:target-framework",
                      "value": "${{ steps.framework.outputs.version }}"
                  }
              ]
          }

          # Save enhanced SBOM
          with open('sbom.json', 'w') as f:
              json.dump(sbom, f, indent=2)

          print("âœ… SBOM generated with .NET version metadata")
          PYTHON_EOF

      - name: Upload SBOM
        uses: actions/upload-artifact@v4
        with:
          name: sbom
          path: sbom.json
          retention-days: 90

      - name: Display Summary
        run: |
          echo "## SBOM Generation Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- **.NET Target Framework**: ${{ steps.framework.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Format**: CycloneDX JSON" >> $GITHUB_STEP_SUMMARY
          echo "- **Artifact**: sbom.json" >> $GITHUB_STEP_SUMMARY
